<style lang="less" scoped src = "">
#submitProblem {
    width: 100%;
    height: 100%;
    padding: 20rpx;
    box-sizing: border-box;
    .problemBox, .problemScreenshots,.contactBox{
        height: 495rpx;
        border-bottom: 1px dotted #979797;
        .tit {
            position: relative;
            height: 48rpx;
            line-height: 48rpx;
            font-size: 34rpx;
            color: #000000;
            padding-left: 53rpx;
            &::before {
                display: block;
                content: "";
                position: absolute;
                top: 50%;
                left: 0;
                width: 28rpx;
                height: 28rpx;
                border-radius: 50%;
                transform: translateY(-50%);
                -webkit-transform: translateY(-50%);
                background:  linear-gradient(-249deg, #FDC999 3%, #FA9960 100%);
                clear: both;
            }
        }
        .problemContent {
            height: 374rpx;
            margin-top: 30rpx;
            .submitProblem_textarea {
                width: 100%;
                height: 100%;
                border-radius: 28px;
                background: #F4F4F4;  
                text-indent: 28rpx;       
                font-size: 24rpx;
                color: #6B6B6B;
                line-height: 33rpx;
                padding: 30rpx 40rpx;
                box-sizing: border-box;

            }
        }
    }
    .problemScreenshots {
        height: 277rpx;
        margin-top: 25rpx;
        .addProblem {
            position: relative;
            width: 150.6rpx;
            height: 150.6rpx;
            background: #F4F4F4;
            margin-top: 30rpx;
            .transverseLine {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%);
                -webkit-transform: translate(-50%);
                width: 41rpx;
                height: 0rpx;
                background: #9B9B9B;
                // transform: rotate(90deg);
                border: 2rpx solid #9B9B9B;
            }
            .verticalLine {
                position: absolute;
                top: 50%;
                left: 50%;
                width: 0;
                height: 41rpx;                
                transform: translateY(-50%);
                -webkit-transform: translateY(-50%);
                background: #9B9B9B;
                border: 2rpx solid #9B9B9B;
            }
        }
    }
    .contactBox {
        margin-top: 30rpx;
        height: 240rpx;
        border: 0;
        .problemContent {
            height: 81rpx;
            line-height: 81rpx;
            background: #F4F4F4; 
            border-radius: 28rpx;                       
            .contact_textarea {
                width: 100%;
                height: 100%;
                padding-top: 28rpx;
                text-indent: 28rpx;
                font-size: 24rpx;
                color: #6B6B6B;

            }
        }
    }
    .submitBtn {
        width: 100%;
        height: 99rpx;
        background: #FA9960;
        border-radius: 8px;
        color: #FFFFFF;
        font-size: 34rpx;
        text-align: center;
        line-height: 99rpx;
    }
}
</style>
<template>
    <view id="submitProblem">
        <view class="problemBox">
            <view class="tit">遇到的问题</view>
            <view class="problemContent">
                <textarea class="submitProblem_textarea" value="" placeholder="{{submitProblem.placeholder}}" placeholder-class="placeholder" maxlength="" focus="" auto-height="" show-confirm-bar="">
                    
                </textarea>                
            </view>
        </view>

        <view class="problemScreenshots">
            <view class="tit">遇到的问题</view>
            <view class="addProblem">
                <view class="transverseLine"></view>
                <view class="verticalLine"></view>
            </view>
        </view>     

        <view class="contactBox">
            <view class="tit">联系微信号</view>
            <view class="problemContent">
                <textarea class="contact_textarea" value="" placeholder="{{contact.placeholder}}" placeholder-class="placeholder" maxlength="" focus="" auto-height="" show-confirm-bar="">
                    
                </textarea>                
            </view>
        </view>   

        <view class="submitBtn click-able" @tap.stop="clickSubmitBtn">
            提交问题
        </view>        


        <!-- <view class="footer">
            <view class="left-line"></view>
            <view class="footText">突围打卡小助手</view>
            <view class="right-line"></view>
        </view>       -->
    </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import base from '@/api/base'
  import myApi from '@/api/mine'
  import mockData from '@/utils/mockData.js'
  import tabBarBottom from '@/components/tabbar/tabbar';
  import tabBox from '@/components/tab/index';
  import myInfo from '@/components/panel';
  import twMixin from '@/mixins/common.js'



  @connect({
    num (state) {
      return state.counter.num
    },
    asyncNum (state) {
      return state.counter.asyncNum
    },
    sumNum (state) {
      return state.counter.num + state.counter.asyncNum
    }
  })

  export default class gaolong extends wepy.page {
    config = {
        navigationBarTitleText: '提交问题',
        "onReachBottomDistance": 10,  
        "enablePullDownRefresh": false,
    };
    components = {
        tabBox,
    };
    data = {
        submitProblem: {
            placeholder: "请具体描述您的问题。。。",
        },
        contact: {
            placeholder: "请填写您的微信号，方便我们联系您"
        }
    };


    computed = {
      now () {
        return +new Date()
      },
    };

    watch = {};  // 声明数据watcher（详见后文介绍）

    mixins = [
        twMixin,
    ];  // 声明页面所引用的Mixin实例

    onLaunch () {
      console.log('onlanch')
      console.log(base)
    };

    onLoad(option){
        var self = this;

        

        console.log(9999999999999999999999999)
        //console.log(this.$parent.globalData.tabBar)

        //  获取数据,更新数据  tabBarClickHandle()启动文件中编写的---- 0就是形参id的实参
        // this.tabBarData = this.$parent.globalData.tabBar;
        // this.$apply();
        // console.log(this.tabBarData)
    }

    async onShow () {
        console.log(2)
        var self = this;
        console.log('onShow')
        console.log(this)
        console.log(base.baseUrl)

        // 开始调用home页面 的接口数据
        // await self.init();
    }

    // 绑定的事件
    methods = {
        //事件处理函数
        intoDetail: async function ( idx , item ) {
            //进入详情页
            console.log( idx , item );

            let predata = await this.getPageData(1,this,"getListData",idx);
            console.log( "首页中获取的单个list的详情数据",predata );

            // 页面调转前 进行数据的预加载
            this.$preload('detailData', predata);

            wepy.navigateTo({
                url: `../packageA/index/index?itemId=${idx}`
            })
        },


        async clickSubmitBtn () {
            // 预加载
            let params = {
                params: {
                    content: "为什么打卡这么好玩",   //问题描述	
                    imgs: "https://www.baidu.com",  //问题截图，多个，由逗号分隔
                    concact: "caleme",                //联系微信号
                },
                'token': "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxIiwicm9sZXMiOiJjdXN0b21lciIsImlhdCI6MTU0OTk2NTY3NH0.8R4zpdfGo_vao8yReVJG3j1U1jkWA5Re11j0QVUwhV0",                             
            }

            let contentSave = await myApi.addQuestion ( params );
            this.$preload( "contentSave",contentSave );

            this.navigatePage("./submitProblemSuccess/index")
        },

        handleUserNameInput (e) {
            console.log(1)
            console.log(e)
            this.userInfo.userName = e.detail.value;
        },

        handleUserNamePassWordInput (e) {
            console.log(2)
            console.log(e.detail.value)
            this.userInfo.userPassWord = e.detail.value;
        },

        validateBtnIsShow (e) {
            console.log(e)
            console.log(e.currentTarget.dataset.name)
            if( e.currentTarget.dataset.name == "validateBtnIsShow" ){
                console.log( this.userInfo.userName )
                console.log( this.userInfo.userPassWord )
                if( this.userInfo.userName != "" && this.userInfo.userPassWord != "" ){
                this.isdisabled = true;
                console.log(this.isdisabled)
                this.$apply();
                }else {
                this.isdisabled = false;
                console.log(this.isdisabled)
                this.$apply();
                }
            }
        },

        searchSelect () {
            console.log(self)
            wx.showActionSheet({
                itemList: ['A', 'B', 'C'],
                success: function(res) {
                    if (!res.cancel) {
                        console.log(res.tapIndex)
                    }
                }
            });            
        },


        focusEvent( e ) {
            this.$broadcast('foucsEvent')
        },

        blurEvent( ){
            this.$broadcast('blurEvent')
        },

        loginOut () {
            //登出
            this.loginOUT();
        },


        openConfirm: function () {
            wx.showModal({
                title: '修改昵称',
                content: '修改昵称',
                confirmText: "确定",
                cancelText: "取消",
                success: function (res) {
                    console.log(res);
                    if (res.confirm) {
                        console.log('用户点击主操作')
                    }else{
                        console.log('用户点击辅助操作')
                    }
                }
            });
        },        
    }


    //包括组件之间的 广播、分发等事件
    //$broadcast：父组件触发所有子组件事件

    //$emit：子组件触发父组件事件
    
    //$invoke：子组件触发子组件事件

    events = {

        'show-change':( show ) => {
            console.log(show)
            this.show = show;

            console.log(this.tabBarData)
            if( show ){
                this.tabBarData.list[0].selected = true;
                this.tabBarData.list[1].selected = false; 
            }else {
                this.tabBarData.list[1].selected = true;
                this.tabBarData.list[0].selected = false;
            }
            this.$apply();
        },

        'searchAdd': ()=>{
            console.log(2)
            wepy.navigateTo({
                url: '../packageA/index/add/index',
            })
        },
    }

    // 自定义的 事件

    async init(){
        // 页面初始化
        // this.getHomeData( 1 );
        let resHomeData = await this.getPageData(1,this,'getHomeData');

        console.log(this.resHomeData);

        if ( resHomeData.code == 200 && resHomeData.data.length ){
            console.log('success!!!!!!!!!!!!!!')

            this.contentBoxData = resHomeData.data;
            console.log(78787878787)
            console.log(this.data)
            this.$apply();  
            console.log(this.data)
        }else {
            console.log('fail!!!!!!!!!!!!!!')
            this.contentBoxData = resHomeData.data;
            this.$apply();            
        }  
    }
}   
</script>
